// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	user "sample/twirp/rpc/user"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: _, _a1
func (_m *Service) CreateUser(_ context.Context, _a1 *user.User) (*user.Response, error) {
	ret := _m.Called(_, _a1)

	var r0 *user.Response
	if rf, ok := ret.Get(0).(func(context.Context, *user.User) *user.Response); ok {
		r0 = rf(_, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*user.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *user.User) error); ok {
		r1 = rf(_, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUser provides a mock function with given fields: _, _
func (_m *Service) GetUser(_ context.Context, _ *user.Request) (*user.Response, error) {
	ret := _m.Called(_, _)

	var r0 *user.Response
	if rf, ok := ret.Get(0).(func(context.Context, *user.Request) *user.Response); ok {
		r0 = rf(_, _)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*user.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *user.Request) error); ok {
		r1 = rf(_, _)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Login provides a mock function with given fields: _, req
func (_m *Service) Login(_ context.Context, req *user.LoginReq) (*user.Response, error) {
	ret := _m.Called(_, req)

	var r0 *user.Response
	if rf, ok := ret.Get(0).(func(context.Context, *user.LoginReq) *user.Response); ok {
		r0 = rf(_, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*user.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *user.LoginReq) error); ok {
		r1 = rf(_, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
